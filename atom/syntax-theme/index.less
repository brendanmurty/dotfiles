@import "syntax-variables";

atom-text-editor {
	background-color: @syntax-background-color;
	color: @syntax-text-color;

	.invisible-character,
	.indent-guide {
		color: @syntax-invisible-character-color;
	}

	.gutter {
		background-color: @syntax-gutter-background-color;
	}

	.gutter .line-number {
		color: @syntax-gutter-text-color;
	}

	.gutter .line-number.folded,
	.gutter .line-number:after,
	.fold-marker:after {
		color: @syntax-gutter-text-color;
	}

	.cursor-line {
		background-color: @syntax-cursor-line;
	}

	.cursor {
		border-color: @syntax-cursor-color;
	}

	.selection .region {
		background-color: @syntax-selection-color;
		color: @syntax-text-color;
	}

	.line-number.cursor-line-no-selection {
		background-color: @syntax-cursor-line;
		color: @syntax-cursor-line-text
	}

	.wrap-guide {
		background-color: @syntax-wrap-guide-color;
	}
}

.bracket-matcher {
	background-color: @syntax-bracket-matcher-background;
	opacity: @syntax-bracket-matcher-opacity;
	border: @syntax-bracket-matcher-border;
}

.syntax--comment {
	color: @syntax-color-comment;
}

.syntax--entity {
	color: @syntax-color-entity;
}

.syntax--entity.syntax--name.syntax--type.syntax--class {
	color: @syntax-color-class;
}

.syntax--keyword {
	color: @syntax-color-keyword;
}

.syntax--storage.syntax--type {
	color: @syntax-color-type;
}

.syntax--storage.syntax--modifier {
	color: @syntax-color-modifier;
}

.syntax--constant {
	color: @syntax-color-constant;

	&.syntax--numeric {
		color: @syntax-color-constant-numeric;
	}

	&.syntax--boolean {
		color: @syntax-color-constant-numeric;
	}
}

.syntax--variable {
	color: @syntax-color-variable;
}

.syntax--delimiter, .syntax--brace {
	color: @syntax-color-brace;
}

.syntax--delimiter.syntax--period {
	color: @syntax-color-period;
}

.syntax--invalid.syntax--deprecated {
	text-decoration: @syntax-text-decoration-deprecated;
	color: @syntax-color-deprecated;
}

.syntax--invalid.syntax--illegal {
	color: @syntax-color-illegal;
}

.syntax--string {
	color: @syntax-color-string;

	.syntax--constant.syntax--character.syntax--escape {
		color: @syntax-color-syntax-escape;
	}

	&.syntax--regexp {
		color: @syntax-color-string;
	}
}

.syntax--source.syntax--ruby.syntax--embedded,
.syntax--string.syntax--regexp.syntax--arbitrary-repitition {
	color: @syntax-color-arbitrary-repitition;
}

.syntax--keyword.syntax--other.syntax--phpdoc {
	color: @syntax-color-phpdoc;
}

.syntax--entity.syntax--name.syntax--tag {
	color: @syntax-color-tag;
}

.syntax--entity.syntax--other.syntax--attribute-name {
	color: @syntax-color-attribute;
}

.syntax--new {
	color: @syntax-color-added;
}

.syntax--support.syntax--function {
	color: @syntax-color-function;
}

.syntax--function-call {
	color: @syntax-color-function-call;
}

.syntax--punctuation {
	color: @syntax-color-punctuation;
}

.syntax--class {
	color: @syntax-color-class;
}

.syntax--operator {
	color: @syntax-color-operator;
}

.syntax--comment .syntax--class,
.syntax--comment .syntax--keyword,
.syntax--comment .syntax--punctuation {
	color: @syntax-color-comment;
}

.syntax--closure {
	color: @syntax-color-closure;
}

atom-workspace {
	background-color: @syntax-background-color;
	color: @syntax-text-color;
}

atom-text-editor:not(.mini),
atom-pane-container atom-pane .item-views,
.panel-contrast .tree-view,
.panel-left ::-webkit-scrollbar-track,
atom-text-editor .gutter,
atom-panel.footer status-bar,
.tinted-tab-bar .active .tab-bar,
.panel-contrast .tabBlender {
  background-color: @syntax-background-color !important;
}