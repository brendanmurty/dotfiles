/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// main.ts
__export(exports, {
  default: () => SystemDarkMode
});
var import_obsidian = __toModule(require("obsidian"));
var SystemDarkMode = class extends import_obsidian.Plugin {
  onload() {
    return __async(this, null, function* () {
      const media = window.matchMedia("(prefers-color-scheme: dark)");
      const callback = () => {
        if (media.matches) {
          console.log("Dark mode active");
          this.updateStyle(true);
        } else {
          console.log("Light mode active");
          this.updateStyle(false);
        }
      };
      media.addEventListener("change", callback);
      this.register(() => media.removeEventListener("change", callback));
      callback();
    });
  }
  updateStyle(isDark) {
    const theme = isDark ? "obsidian" : "moonstone";
    this.app.setTheme(theme);
    this.app.vault.setConfig("theme", theme);
    this.app.workspace.trigger("css-change");
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgUGx1Z2luIH0gZnJvbSBcIm9ic2lkaWFuXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTeXN0ZW1EYXJrTW9kZSBleHRlbmRzIFBsdWdpbiB7XHJcblx0YXN5bmMgb25sb2FkKCkge1xyXG5cdFx0Ly8gV2F0Y2ggZm9yIHN5c3RlbSBjaGFuZ2VzIHRvIGNvbG9yIHRoZW1lXHJcblx0XHRjb25zdCBtZWRpYSA9IHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKTtcclxuXHJcblx0XHRjb25zdCBjYWxsYmFjayA9ICgpID0+IHtcclxuXHRcdFx0aWYgKG1lZGlhLm1hdGNoZXMpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcIkRhcmsgbW9kZSBhY3RpdmVcIik7XHJcblx0XHRcdFx0dGhpcy51cGRhdGVTdHlsZSh0cnVlKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcIkxpZ2h0IG1vZGUgYWN0aXZlXCIpO1xyXG5cdFx0XHRcdHRoaXMudXBkYXRlU3R5bGUoZmFsc2UpO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRcdG1lZGlhLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgY2FsbGJhY2spO1xyXG5cclxuXHRcdC8vIFJlbW92ZSBsaXN0ZW5lciB3aGVuIHdlIHVubG9hZFxyXG5cdFx0dGhpcy5yZWdpc3RlcigoKSA9PiBtZWRpYS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGNhbGxiYWNrKSk7XHJcblxyXG5cdFx0Y2FsbGJhY2soKTtcclxuXHR9XHJcblxyXG5cdHVwZGF0ZVN0eWxlKGlzRGFyazogYm9vbGVhbikge1xyXG5cdFx0Y29uc3QgdGhlbWUgPSBpc0RhcmsgPyBcIm9ic2lkaWFuXCIgOiBcIm1vb25zdG9uZVwiO1xyXG5cclxuXHRcdC8vIEB0cy1pZ25vcmVcclxuXHRcdHRoaXMuYXBwLnNldFRoZW1lKHRoZW1lKTtcclxuXHRcdC8vIEB0cy1pZ25vcmVcclxuXHRcdHRoaXMuYXBwLnZhdWx0LnNldENvbmZpZyhcInRoZW1lXCIsIHRoZW1lKTtcclxuXHRcdHRoaXMuYXBwLndvcmtzcGFjZS50cmlnZ2VyKFwiY3NzLWNoYW5nZVwiKTtcclxuXHR9XHJcbn1cclxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFBdUI7QUFFdkIsbUNBQTRDLHVCQUFPO0FBQUEsRUFDNUMsU0FBUztBQUFBO0FBRWQsWUFBTSxRQUFRLE9BQU8sV0FBVztBQUVoQyxZQUFNLFdBQVcsTUFBTTtBQUN0QixZQUFJLE1BQU0sU0FBUztBQUNsQixrQkFBUSxJQUFJO0FBQ1osZUFBSyxZQUFZO0FBQUEsZUFDWDtBQUNOLGtCQUFRLElBQUk7QUFDWixlQUFLLFlBQVk7QUFBQTtBQUFBO0FBSW5CLFlBQU0saUJBQWlCLFVBQVU7QUFHakMsV0FBSyxTQUFTLE1BQU0sTUFBTSxvQkFBb0IsVUFBVTtBQUV4RDtBQUFBO0FBQUE7QUFBQSxFQUdELFlBQVksUUFBaUI7QUFDNUIsVUFBTSxRQUFRLFNBQVMsYUFBYTtBQUdwQyxTQUFLLElBQUksU0FBUztBQUVsQixTQUFLLElBQUksTUFBTSxVQUFVLFNBQVM7QUFDbEMsU0FBSyxJQUFJLFVBQVUsUUFBUTtBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
